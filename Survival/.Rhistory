abline(v=that,h=ehat,lwd=.4)
lik1<- apply(like,1,max)
plot(th,lik1,type='n',xlab=expression(beta_0),
ylab='Likelihood')
lines(th,lik1)
abline(h=.15,lwd=.4)
abline(v=0)
title(expression('Profile likelihood'))
# getting likelihood of H0
a<- approx(th,lik1,xout=0)$y
print(a)
# getting likelihood interval
#a <- li(th,lik1,0.15)
#cat('95% CI for theta=',a,'\n')
# finding optimal parameters
fun2<- function(th){
theta = th[1]
eta = th[2]
a <- exp(theta+eta)
b <- exp(eta)
-(x*theta + (x+y)*eta - m*log(1+a) - n*log(1+b))
}
opt <- nlminb(c(0, 0), fun2)
(opt$par)
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
#Count number of patient without treatment and without AIDS
(sum(data.time$tx == 0 & data.time$event == 0))
#Count number of patient without treatment and AIDS
(sum(data.time$tx == 0 & data.time$event == 1))
#Count number of patient with treatment and without AIDS
(sum(data.time$tx == 1 & data.time$event == 0))
# Count number of patient with treatment and AIDS
(sum(data.time$tx == 1 & data.time$event == 1))
#Calculating proportions
#No aids out of people without treatment
(sum(data.time$tx == 0 & data.time$event == 0))/sum(data.time$tx == 0)
#Aids out of people without treatment
(sum(data.time$tx == 0 & data.time$event == 1))/sum(data.time$tx == 0)
#No Aids out of people with treatment
(sum(data.time$tx == 1 & data.time$event == 0))/sum(data.time$tx == 1)
#Aids out of people with treatment
(sum(data.time$tx == 1 & data.time$event == 1))/sum(data.time$tx == 1)
# Likelihood function for all patients with treat and without treatment. (event=1 is treatment). (pxep is used to define the probability after a certain point in time)
exp.likelihood=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood,lower=0)$objective)
#(optimize(exp.likelihood,c(0, 100),maximum=TRUE)$maximum)
# Likelihood function for no treatment group. (p = cumulative function, d=density function)
exp.likelihood_no_treat=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1 & data.time$tx == 0], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0 & data.time$tx == 0], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood_no_treat,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood_no_treat,lower=0)$objective)
# Likelihood function for treatment group
exp.likelihood_with_treat=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1 & data.time$tx == 1], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0 & data.time$tx == 1], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood_with_treat,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood_with_treat,lower=0)$objective )
# Implement negative log likelihood function
nll.exp <- function(rate){
# Part for people with Aids
val1 <- -sum(dexp(x=data.time$time[data.time$event==1],rate=exp(-rate[1]-rate[2]*data.time$tx[data.time$event==1]),log=TRUE))
# Part for people without Aids
val2 <- -sum(log(1-pexp(q=data.time$time[data.time$event==0],rate=exp(-rate[1]-rate[2]*data.time$tx[data.time$event==0]))))
val1+val2
}
nll.exp(c(7,1))
# Find optimal rate:
opt.exp<- optim(c(7,1),nll.exp, hessian=T)
#opt.exp <- nlminb(start=c(0.001,0.005),objective=nll.exp,lower=c(-Inf,-Inf))
opt.exp$par
opt.exp$hessian
# b1 -  is the treatment effect
(opt.exp$par[2])
#Making a confidence interval
HE <- hessian(nll.exp,opt.exp$par)
se <- sqrt(diag(solve(HE)))
#Confidence interval for b1
(opt.exp$par[2]+c(-1,1)*qnorm(0.975)*se[2])
# plots
par(mfrow=c(2,2))
th<- seq(-2,2,len=1000)
et<- seq(-2,0,len=1000)
fun1<- function(theta,eta){
a <- exp(theta+eta)
b<- exp(eta)
x*theta + (x+y)*eta - m*log(1+a) - n*log(1+b)
}
ll<- outer(th,et,'fun1')
like<- exp(ll-max(ll))
contour(th,et,like,level=c(.1,.3,.5,.7,.9),
xlab=expression(beta_0),
ylab=expression(beta_1))
title(expression('Likelihood contour'))
abline(v=that,h=ehat,lwd=.4)
lik1<- apply(like,1,max)
plot(th,lik1,type='n',xlab=expression(beta_0),
ylab='Likelihood')
lines(th,lik1)
abline(h=.15,lwd=.4)
abline(v=0)
title(expression('Profile likelihood'))
# Example 4.4
x<- 25; m<- 170
y<- 44; n<- 168
that<- log(x/(m-x)*(n-y)/y)
se2<- 1/x + 1/(m-x) + 1/y + 1/(n-y)
se<- sqrt(se2)
ehat<- log(y/(n-y))
#print(c(that,ehat))
cat('theta-hat=',that,',  se=',se,'\n')
# plots
par(mfrow=c(2,2))
th<- seq(-2,2,len=1000)
et<- seq(-2,0,len=1000)
fun1<- function(theta,eta){
a <- exp(theta+eta)
b<- exp(eta)
x*theta + (x+y)*eta - m*log(1+a) - n*log(1+b)
}
ll<- outer(th,et,'fun1')
like<- exp(ll-max(ll))
contour(th,et,like,level=c(.1,.3,.5,.7,.9),
xlab=expression(beta_1),
ylab=expression(beta_0))
title(expression('Likelihood contour'))
abline(v=that,h=ehat,lwd=.4)
lik1<- apply(like,1,max)
plot(th,lik1,type='n',xlab=expression(beta_1),
ylab='Likelihood')
lines(th,lik1)
abline(h=.15,lwd=.4)
abline(v=0)
title(expression('Profile likelihood'))
# getting likelihood of H0
a<- approx(th,lik1,xout=0)$y
print(a)
# getting likelihood interval
#a <- li(th,lik1,0.15)
#cat('95% CI for theta=',a,'\n')
# finding optimal parameters
fun2<- function(th){
theta = th[1]
eta = th[2]
a <- exp(theta+eta)
b <- exp(eta)
-(x*theta + (x+y)*eta - m*log(1+a) - n*log(1+b))
}
opt <- nlminb(c(0, 0), fun2)
(opt$par)
# plots
par(mfrow=c(2,2))
th<- seq(-2,2,len=1000)
et<- seq(-2,0,len=1000)
fun1<- function(theta,eta){
a <- exp(theta+eta)
b<- exp(eta)
x*theta + (x+y)*eta - m*log(1+a) - n*log(1+b)
}
ll<- outer(th,et,'fun1')
like<- exp(ll-max(ll))
contour(th,et,like,level=c(.1,.3,.5,.7,.9),
xlab=expression(beta_1),
ylab=expression(beta_0))
title(expression('Likelihood contour'))
abline(v=that,h=ehat,lwd=.4)
lik1<- apply(like,1,max)
plot(th,lik1,type='n',xlab=expression(beta_1),
ylab='Likelihood')
lines(th,lik1)
abline(h=.15,lwd=.4)
abline(v=0)
title(expression('Profile likelihood'))
confint(mod1)
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Creating design matrix
X <- matrix(0, nrow = length(AIDS), ncol = 2)
X[,1] = 1
X[,2] = c(rep(1,data$AIDS_yes[1]), rep(0,data$AIDS_yes[2]), rep(1,data$AIDS_no[1]),rep(1,data$AIDS_no[2]))
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
mod0=glm(AIDS~1, family = binomial,data = df) #Model kun med intercept
#c = mod1$null.deviance-mod1$deviance
c = logLik(mod0)[1]-logLik(mod1)[1]
pchisq(-2*c, df=1,lower.tail = F)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
m0 = glm(AIDS ~ 1, family = binomial)
# See def. for pi on p. 259
pi = m0$fit
#Weights for the score and information function
WS <- (AIDS-pi)
WI <- pi*(1-pi)
#t is the transpose
XWS = t(X) %*% WS # Score function
XWI = X * WI #Information matrix (mellemregning)
XWX = t(XWI) %*% X # Information matrix
#The score statistics (HVAD ER DET DER SKER HER?!?)
t(XWS) %*% solve(XWX) %*% XWS
print('p-value:')
1-pchisq(t(XWS) %*% solve(XWX) %*% XWS, df=1)
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
by(data.time$event, data.time$tx, sum)
#From days to years
data.time$YearTime <- data.time$time/365.25
by(data.time$YearTime, data.time$tx, sum)
library(survival)
Surv.Bytx <- survfit(Surv(time, event == 1) ~ tx,
conf.type = "log-log",data = data.time)
(Surv.Bytx)
plot(Surv.Bytx, conf.int = TRUE, las = 1, xlab = "Time",ylab = "Estimated Survival Prob.", col=c(2,3), lwd = 1)
legend("bottomleft", col=2:3, c("Not treated","Treated"), lwd=2)
plot(Surv.Bytx, fun=function(x) { 1- x }, conf.int = TRUE,las = 1, xlab = "Time",
ylab = "Estimated Failure Prob.", col=c(2,3))
legend("topleft", col=c(2,3), c("Male","Female"))
survdiff(Surv(YearTime, event == 1) ~ tx, data = data.time)
mod1 <- survreg(Surv(time, event) ~ tx + cd4,
data = data.time, dist = "weibull")
summary(mod1)
mod3 <- survreg(Surv(time, event) ~ cd4 + tx,
data = data.time, dist = "loglogistic")
summary(mod3)
c(AIC(mod1),AIC(mod3))
confint(mod3)
#Time ratio for bearings
exp(cbind(coef(mod3)[3],confint(mod3)[3, 1], confint(mod3)[3, 2]))
#Time ratio for loads
exp(cbind(coef(mod3)[2],confint(mod3)[2, 1], confint(mod3)[2, 2])*50)
data.time$z <- (log(data.time$time)-mod3$linear.predictors)/mod3$scale
data.time$CS3 <- log(1+exp(data.time$z))
surv3 <- survfit(Surv(CS3, event==1)~1 , data = data.time)
plot(surv3$time, -log(surv3$surv))
abline(a=0, b=1, lty=2)
xrange <- range(data.time$time)
t <- seq(xrange[1],xrange[2],length=100)
#LOG LOGISTIC
coef3 <- mod3$coefficients
z31 <- (log(t)-(coef3[1]+coef3[2]+coef3[3]))/mod3$scale
z30 <- (log(t)-(coef3[1]+coef3[2]))/mod3$scale
S31 <- (1+exp(z31))^-1
S30 <- (1+exp(z30))^-1
# get the range for the x and y axis
xrange <- range(data.time$time)
yrange <- range(S30)
# set up the plot
plot(xrange, yrange, type="n", xlab="Hours since test start",
ylab="Probability of survival (cd4=1)",las=1)
#PLOT THE SURVIVAL FUNCTIONS
lines(t, S31, type="l", col=2, lty=1, lwd=2)
lines(t, S30, type="l", col=3, lty=1, lwd=2)
legend('topright',lwd=2,col=c(2,3),legend=c('LL with tx', 'LL without tx'))
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,5)
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Creating design matrix
X <- matrix(0, nrow = length(AIDS), ncol = 2)
X[,1] = 1
X[,2] = c(rep(1,data$AIDS_yes[1]), rep(0,data$AIDS_yes[2]), rep(1,data$AIDS_no[1]),rep(1,data$AIDS_no[2]))
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
mod0=glm(AIDS~1, family = binomial,data = df) #Model kun med intercept
#c = mod1$null.deviance-mod1$deviance
c = logLik(mod0)[1]-logLik(mod1)[1]
pchisq(-2*c, df=1,lower.tail = F)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
m0 = glm(AIDS ~ 1, family = binomial)
# See def. for pi on p. 259
pi = m0$fit
#Weights for the score and information function
WS <- (AIDS-pi)
WI <- pi*(1-pi)
#t is the transpose
XWS = t(X) %*% WS # Score function
XWI = X * WI #Information matrix (mellemregning)
XWX = t(XWI) %*% X # Information matrix
#The score statistics (HVAD ER DET DER SKER HER?!?)
t(XWS) %*% solve(XWX) %*% XWS
print('p-value:')
1-pchisq(t(XWS) %*% solve(XWX) %*% XWS, df=1)
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,5)
by(data.time$event, data.time$tx, sum)
#From days to years
data.time$YearTime <- data.time$time/365.25
by(data.time$YearTime, data.time$tx, sum)
library(survival)
Surv.Bytx <- survfit(Surv(time, event == 1) ~ tx,
conf.type = "log-log",data = data.time)
(Surv.Bytx)
plot(Surv.Bytx, conf.int = TRUE, las = 1, xlab = "Time",ylab = "Estimated Survival Prob.", col=c(2,3), lwd = 1)
legend("bottomleft", col=2:3, c("Control treatment","New Treatment"), lwd=2)
plot(Surv.Bytx, fun=function(x) { 1- x }, conf.int = TRUE,las = 1, xlab = "Time",
ylab = "Estimated Failure Prob.", col=c(2,3))
legend("topleft", col=c(2,3), c("Control treatment","New Treatment"))
survdiff(Surv(YearTime, event == 1) ~ tx, data = data.time)
mod1 <- survreg(Surv(time, event) ~ tx + cd4,
data = data.time, dist = "weibull")
summary(mod1)
mod3 <- survreg(Surv(time, event) ~ cd4 + tx,
data = data.time, dist = "loglogistic")
summary(mod3)
c(AIC(mod1),AIC(mod3))
confint(mod3)
#Time ratio for bearings
exp(cbind(coef(mod3)[3],confint(mod3)[3, 1], confint(mod3)[3, 2]))
#Time ratio for loads
exp(cbind(coef(mod3)[2],confint(mod3)[2, 1], confint(mod3)[2, 2])*50)
data.time$z <- (log(data.time$time)-mod3$linear.predictors)/mod3$scale
data.time$CS3 <- log(1+exp(data.time$z))
surv3 <- survfit(Surv(CS3, event==1)~1 , data = data.time)
plot(surv3$time, -log(surv3$surv))
abline(a=0, b=1, lty=2)
xrange <- range(data.time$time)
t <- seq(xrange[1],xrange[2],length=100)
#LOG LOGISTIC
coef3 <- mod3$coefficients
z31 <- (log(t)-(coef3[1]+coef3[2]+coef3[3]))/mod3$scale
z30 <- (log(t)-(coef3[1]+coef3[2]))/mod3$scale
S31 <- (1+exp(z31))^-1
S30 <- (1+exp(z30))^-1
# get the range for the x and y axis
xrange <- range(data.time$time)
yrange <- range(S30)
# set up the plot
plot(xrange, yrange, type="n", xlab="Hours since test start",
ylab="Probability of survival (cd4=1)",las=1)
#PLOT THE SURVIVAL FUNCTIONS
lines(t, S31, type="l", col=2, lty=1, lwd=2)
lines(t, S30, type="l", col=3, lty=1, lwd=2)
legend('topright',lwd=2,col=c(2,3),legend=c('LL with tx', 'LL without tx'))
plot(Surv.Bytx, fun=function(x) { 1- x }, conf.int = TRUE,las = 1, xlab = "Time",
ylab = "Estimated Failure Prob.", col=c(2,3))
legend("topleft", col=c(2:3), c("Control treatment","New Treatment"))
plot(Surv.Bytx, fun=function(x) { 1- x }, conf.int = TRUE,las = 1, xlab = "Time",
ylab = "Estimated Failure Prob.", col=c(2,3))
legend("topleft", col=2:3, c("Control treatment","New Treatment"))
plot(Surv.Bytx, fun=function(x) { 1- x }, conf.int = TRUE,las = 1, xlab = "Time",
ylab = "Estimated Failure Prob.", col=c(2,3))
legend("topleft", col=c(2,3), c("Control treatment","New Treatment"),lwd = 2)
plot(Surv.Bytx, conf.int = TRUE, las = 1, xlab = "Time",ylab = "Estimated Survival Prob.", col=c(2,3), lwd = 1)
legend("bottomleft", col=2:3, c("Control treatment","New Treatment"), lwd=2)
plot(Surv.Bytx, fun=function(x) { 1- x }, conf.int = TRUE,las = 1, xlab = "Time",
ylab = "Estimated Failure Prob.", col=c(2,3))
legend("topleft", col=c(2,3), c("Control treatment","New Treatment"),lwd = 2)
data.time$z <- (log(data.time$time)-mod3$linear.predictors)/mod3$scale
data.time$CS3 <- log(1+exp(data.time$z))
surv3 <- survfit(Surv(CS3, event==1)~1 , data = data.time)
plot(surv3$time, -log(surv3$surv), xlabel = "Time", ylabel = "Cox-Snell Residuals")
abline(a=0, b=1, lty=2)
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Creating design matrix
X <- matrix(0, nrow = length(AIDS), ncol = 2)
X[,1] = 1
X[,2] = c(rep(1,data$AIDS_yes[1]), rep(0,data$AIDS_yes[2]), rep(1,data$AIDS_no[1]),rep(1,data$AIDS_no[2]))
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
mod0=glm(AIDS~1, family = binomial,data = df) #Model kun med intercept
#c = mod1$null.deviance-mod1$deviance
c = logLik(mod0)[1]-logLik(mod1)[1]
pchisq(-2*c, df=1,lower.tail = F)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
m0 = glm(AIDS ~ 1, family = binomial)
# See def. for pi on p. 259
pi = m0$fit
#Weights for the score and information function
WS <- (AIDS-pi)
WI <- pi*(1-pi)
#t is the transpose
XWS = t(X) %*% WS # Score function
XWI = X * WI #Information matrix (mellemregning)
XWX = t(XWI) %*% X # Information matrix
#The score statistics (HVAD ER DET DER SKER HER?!?)
t(XWS) %*% solve(XWX) %*% XWS
print('p-value:')
1-pchisq(t(XWS) %*% solve(XWX) %*% XWS, df=1)
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,5)
by(data.time$event, data.time$tx, sum)
#From days to years
data.time$YearTime <- data.time$time/365.25
by(data.time$YearTime, data.time$tx, sum)
library(survival)
Surv.Bytx <- survfit(Surv(time, event == 1) ~ tx,
conf.type = "log-log",data = data.time)
(Surv.Bytx)
plot(Surv.Bytx, conf.int = TRUE, las = 1, xlab = "Time",ylab = "Estimated Survival Prob.", col=c(2,3), lwd = 1)
legend("bottomleft", col=2:3, c("Control treatment","New Treatment"), lwd=2)
plot(Surv.Bytx, fun=function(x) { 1- x }, conf.int = TRUE,las = 1, xlab = "Time",
ylab = "Estimated Failure Prob.", col=c(2,3))
legend("topleft", col=c(2,3), c("Control treatment","New Treatment"),lwd = 2)
survdiff(Surv(YearTime, event == 1) ~ tx, data = data.time)
mod1 <- survreg(Surv(time, event) ~ tx + cd4,
data = data.time, dist = "weibull")
summary(mod1)
mod3 <- survreg(Surv(time, event) ~ cd4 + tx,
data = data.time, dist = "loglogistic")
summary(mod3)
c(AIC(mod1),AIC(mod3))
confint(mod3)
#Time ratio for bearings
exp(cbind(coef(mod3)[3],confint(mod3)[3, 1], confint(mod3)[3, 2]))
#Time ratio for loads
exp(cbind(coef(mod3)[2],confint(mod3)[2, 1], confint(mod3)[2, 2])*50)
data.time$z <- (log(data.time$time)-mod3$linear.predictors)/mod3$scale
data.time$CS3 <- log(1+exp(data.time$z))
surv3 <- survfit(Surv(CS3, event==1)~1 , data = data.time)
plot(surv3$time, -log(surv3$surv), xlabel = "Time", ylabel = "Cox-Snell Residuals")
abline(a=0, b=1, lty=2)
xrange <- range(data.time$time)
t <- seq(xrange[1],xrange[2],length=100)
#LOG LOGISTIC
coef3 <- mod3$coefficients
z31 <- (log(t)-(coef3[1]+coef3[2]+coef3[3]))/mod3$scale
z30 <- (log(t)-(coef3[1]+coef3[2]))/mod3$scale
S31 <- (1+exp(z31))^-1
S30 <- (1+exp(z30))^-1
# get the range for the x and y axis
xrange <- range(data.time$time)
yrange <- range(S30)
# set up the plot
plot(xrange, yrange, type="n", xlab="Hours since test start",
ylab="Probability of survival (cd4=1)",las=1)
#PLOT THE SURVIVAL FUNCTIONS
lines(t, S31, type="l", col=2, lty=1, lwd=2)
lines(t, S30, type="l", col=3, lty=1, lwd=2)
legend('topright',lwd=2,col=c(2,3),legend=c('LL with tx', 'LL without tx'))
data.time$z <- (log(data.time$time)-mod3$linear.predictors)/mod3$scale
data.time$CS3 <- log(1+exp(data.time$z))
surv3 <- survfit(Surv(CS3, event==1)~1 , data = data.time)
plot(surv3$time, -log(surv3$surv), xlab = "Time", ylab = "Cox-Snell Residuals")
abline(a=0, b=1, lty=2)
data.time$z <- (log(data.time$time)-mod3$linear.predictors)/mod3$scale
data.time$CS3 <- log(1+exp(data.time$z))
surv3 <- survfit(Surv(CS3, event==1)~1 , data = data.time)
plot(surv3$time, -log(surv3$surv), xlab = "Time", ylab = "Cox-Snell Residuals")
abline(a=0, b=1, lty=2)
