(p1+c(-1,1)*qnorm(0.975)*se_AZT_yes/sqrt(n1))
(p2+c(-1,1)*qnorm(0.975)*se_AZT_no/sqrt(n2))
x=data$AIDS_yes[1]
y=data$AIDS_no[1]
m=sum(data$AIDS_yes)
n=sum(data$AIDS_no)
N=m+n
t=x+y
#The standard test of equality of proportions is the famous chi-squared test
(chi.squared.test=N*(x*(n-y)-y*(m-x))^2/(m*n*t*(N-t)))
(pchisq(chi.squared.test, df=1, lower.tail=FALSE))
(theta.compare = log((theta_AZT_yes.opt/(1-theta_AZT_yes.opt))/(theta_AZT_no.opt/(1- theta_AZT_no.opt))))
(log((x/(m-x))/(y-(n-y))))
ehat<- log(y/(n-y))
#print(c(that,ehat))
cat('theta-hat=',that,',  se=',se,'\n')
# plots
par(mfrow=c(1,1))
th<- seq(that-2*se,that+3*se,len=30)
et<- seq(ehat-4,ehat+2,len=30)
fun1<- function(theta,eta){
a <- exp(theta+eta)
b<- exp(eta)
x*theta + (x+y)*eta - m*log(1+a) - n*log(1+b)
}
ll<- outer(th,et,'fun1')
like<- exp(ll-max(ll))
lik1<- apply(like,1,max)
plot(th,lik1,type='n',xlab=expression(theta),
ylab='Likelihood')
lines(th,lik1)
abline(h=.15,lwd=.4)
abline(v=0)
title(expression('(b) Profile likelihood'))
library(magrittr)
log_data = data
logL_partial <- function(b0, b1, data, AZT = TRUE){
y = if (AZT) {data[1,2]} else {data[2,2]} %>% as.numeric()
n = if (AZT) {data[1,3]} else {data[2,3]} %>% as.numeric()
false = n-y
y*((b0 + b1 * AZT) * 1 - log(1+exp(b0+b1*AZT))) + false*((b0 + b1 * AZT) * 0 - log(1+exp(b0+b1*AZT)))
}
logL <- function(theta, data){
- (logL_partial(theta[1], theta[2],data, F) + logL_partial(theta[1],theta[2],data, T))
}
opt <- nlminb(c(0, 0), logL, lower = c(-Inf,-Inf), data = log_data)
p0 <- exp(opt$par[1])/(1+exp(opt$par[1]))
p1 <- exp(opt$par[1] + opt$par[2])/(1+exp(opt$par[1] + opt$par[2]))
logL_b1 <- function(theta, b1, data){
-(logL_partial(theta[1], b1,data, F) + logL_partial(theta[1],b1,data, T))
}
profile_b1 <- function(b1, data){
opt <- nlminb(c(0), logL_b1, lower = c(-Inf), data = log_data, b1 = b1)
# optimize(logL)
b0 <- opt$par
-logL_b1(c(b0),b1,data)
}
b1 <- seq(-5,5,0.01)
alpha <- 0.05
c <- exp(-1/2*qchisq(1-alpha,1))
p = c()
for (i in 1:length(b1)){
p[i] = exp(profile_b1(b1[i], log_data))
}
MLE_b1 <- optimize(profile_b1, c(-5,5), data = log_data, maximum = T)$maximum
plot(b1, p/max(p), 'l')
abline(c, 0)
abline(v = MLE_b1)
a_b1 <- b1[p/max(p) > c]
CI_b1 <- c(min(a_b1), max(a_b1))
cat("The maximum likelihood estimates of p0 and p1 are: p0 = ", p0, " p1 = ", p1, "\n")
cat("The maximum profile likelihood estimate of b1 is:  ", MLE_b1, "\n")
cat("With confidence intervals: ", CI_b1, "\n")
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
#Count number of patient without treatment and without AIDS
(sum(data.time$tx == 0 & data.time$event == 0))
#Count number of patient without treatment and AIDS
(sum(data.time$tx == 0 & data.time$event == 1))
#Count number of patient with treatment and without AIDS
(sum(data.time$tx == 1 & data.time$event == 0))
# Count number of patient with treatment and AIDS
(sum(data.time$tx == 1 & data.time$event == 1))
#Calculating proportions
#No aids out of people without treatment
(sum(data.time$tx == 0 & data.time$event == 0))/sum(data.time$tx == 0)
(sum(data.time$tx == 0 & data.time$event == 1))/sum(data.time$tx == 0)
(sum(data.time$tx == 1 & data.time$event == 0))/sum(data.time$tx == 1)
(sum(data.time$tx == 1 & data.time$event == 1))/sum(data.time$tx == 1)
exp.likelihood=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood,lower=0)$objective)
#(optimize(exp.likelihood,c(0, 100),maximum=TRUE)$maximum)
exp.likelihood_no_treat=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1 & data.time$tx == 0], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0 & data.time$tx == 0], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood_no_treat,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood_no_treat,lower=0)$objective)
exp.likelihood_with_treat=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1 & data.time$tx == 1], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0 & data.time$tx == 1], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood_with_treat,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood_with_treat,lower=0)$objective )
# Implement negative log likelihood function
nll.exp <- function(rate){
val1 <- -sum(dexp(x=data.time$time[data.time$event==1],rate=rate[1]+rate[2]*data.time$tx[data.time$event==1],log=TRUE))
val2 <- -sum(pexp(q=data.time$time[data.time$event==0],rate=rate[1]+rate[2]*data.time$tx[data.time$event==0],lower.tail=F,log=TRUE))
val1+val2
}
opt.exp <- nlminb(start=c(0.001,0.005),objective=nll.exp,lower=c(-Inf,-Inf))
(opt.exp$par[2])
#Der er noget galt her!!!!!
#Making a confidence interval
HE <- hessian(nll.exp,opt.exp$par)
se <- sqrt(diag(solve(I)))
(opt.exp$par[2]+c(-1,1)*qnorm(0.975)*se/sqrt(n))
nll.b1 <- function(rate,b1){
val1 <- -sum(dexp(x=data.time$time[data.time$event==1],rate=rate[1]+b1*data.time$tx[data.time$event==1],log=TRUE))
val2 <- -sum(pexp(q=data.time$time[data.time$event==0],rate=rate[1]+b1*data.time$tx[data.time$event==0],lower.tail=F,log=TRUE))
val1+val2
}
profile.b1 <- function(b1){
opt <- nlminb(start=c(0.001),objective=nll.exp,lower=c(-Inf),b1=b1)
b0 <-opt$par
-nll.b1(c(b0),b1)
}
b1 <- seq(-0.0005,0.0005,0.00001)
n_b1 = length(b1)
p = rep(NaN,n_b1)
# for (i in 1:length(b1)) {
#    p[i] = exp(profile.b1(b1[i]))
#  }
#
# plot(b1,p/max(p),'l')
n_b1 = length(b1)
profile.b1.plot = rep(NaN,n_b1)
for (i in 1:length(b1)){
profile.b1.plot[i] = profile.b1(b1[i])
}
nll.b1 <- function(rate,b1){
val1 <- -sum(dexp(x=data.time$time[data.time$event==1],rate=rate[1]+b1*data.time$tx[data.time$event==1],log=TRUE))
val2 <- -sum(pexp(q=data.time$time[data.time$event==0],rate=rate[1]+b1*data.time$tx[data.time$event==0],lower.tail=F,log=TRUE))
val1+val2
}
profile.b1 <- function(b1_in){
opt <- nlminb(start=c(0.001),objective=nll.exp,lower=c(-Inf),b1=b1_in)
b0 <-opt$par
-nll.b1(c(b0),b1)
}
b1 <- seq(-0.0005,0.0005,0.00001)
n_b1 = length(b1)
p = rep(NaN,n_b1)
# for (i in 1:length(b1)) {
#    p[i] = exp(profile.b1(b1[i]))
#  }
#
# plot(b1,p/max(p),'l')
n_b1 = length(b1)
profile.b1.plot = rep(NaN,n_b1)
for (i in 1:length(b1)){
profile.b1.plot[i] = profile.b1(b1[i])
}
nll.b1 <- function(rate,b1){
val1 <- -sum(dexp(x=data.time$time[data.time$event==1],rate=rate[1]+b1*data.time$tx[data.time$event==1],log=TRUE))
val2 <- -sum(pexp(q=data.time$time[data.time$event==0],rate=rate[1]+b1*data.time$tx[data.time$event==0],lower.tail=F,log=TRUE))
val1+val2
}
profile.b1 <- function(b1_in){
opt <- nlminb(start=c(0.001),objective=nll.exp,lower=c(-Inf),b1=b1_in)
b0 <-opt$par
-nll.b1(c(b0),b1_in)
}
b1 <- seq(-0.0005,0.0005,0.00001)
n_b1 = length(b1)
p = rep(NaN,n_b1)
# for (i in 1:length(b1)) {
#    p[i] = exp(profile.b1(b1[i]))
#  }
#
# plot(b1,p/max(p),'l')
n_b1 = length(b1)
profile.b1.plot = rep(NaN,n_b1)
for (i in 1:length(b1)){
profile.b1.plot[i] = profile.b1(b1[i])
}
nll.b1 <- function(rate,b1){
val1 <- -sum(dexp(x=data.time$time[data.time$event==1],rate=rate[1]+b1*data.time$tx[data.time$event==1],log=TRUE))
val2 <- -sum(pexp(q=data.time$time[data.time$event==0],rate=rate[1]+b1*data.time$tx[data.time$event==0],lower.tail=F,log=TRUE))
val1+val2
}
profile.b1 <- function(b1){
opt <- nlminb(start=c(0.001),objective=nll.exp,lower=c(-Inf),b1=b1)
b0 <-opt$par
-nll.b1(c(b0),b1)
}
b1 <- seq(-0.0005,0.0005,0.00001)
n_b1 = length(b1)
p = rep(NaN,n_b1)
# for (i in 1:length(b1)) {
#    p[i] = exp(profile.b1(b1[i]))
#  }
#
# plot(b1,p/max(p),'l')
n_b1 = length(b1)
profile.b1.plot = rep(NaN,n_b1)
for (i in 1:length(b1)){
profile.b1.plot[i] = profile.b1(b1[i])
}
#Der er noget galt her!!!!!
#Making a confidence interval
HE <- hessian(nll.exp,opt.exp$par)
se <- sqrt(diag(solve(I)))
(opt.exp$par[2]+c(-1,1)*qnorm(0.975)*se[2])
SE
#Der er noget galt her!!!!!
#Making a confidence interval
HE <- hessian(nll.exp,opt.exp$par)
se <- sqrt(diag(solve(HE)))
(opt.exp$par[2]+c(-1,1)*qnorm(0.975)*se[2])
(that= log(x/(m-x)*(n-y)/y))
ehat<- log(y/(n-y))
#print(c(that,ehat))
cat('theta-hat=',that,',  se=',se,'\n')
# plots
par(mfrow=c(1,1))
th<- seq(that-2*se,that+3*se,len=30)
(that= log(x/(m-x)*(n-y)/y))
ehat<- log(y/(n-y))
#print(c(that,ehat))
cat('theta-hat=',that,',  se=',se,'\n')
# plots
par(mfrow=c(1,1))
th<- seq(that-2*se,that+3*se,len=30)
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
#Formulating the likelihood function
binomial.log.likelihood = function(theta,success,size){
-(sum(dbinom(x=success,size=size,prob=theta, log=TRUE)))}
#(theta.opt=optimize(binomial.log.likelihood, c(0.01,0.99),success=sum(data$AIDS_yes),size=sum(data$n))$minimum)
(nlminb(start=0.5,objective=binomial.log.likelihood,lower=0,success=k,size=n)$par)
#Theta for patients treated with AZT. This is the probability of having AIDS when treated with AZT.
#(theta_AZT_yes.opt=optimize(binomial.log.likelihood, c(0.01,0.99),x=data$AIDS_yes[1],size=data$n[1])$minimum)
(theta_AZT_yes.opt=nlminb(start=0.5,binomial.log.likelihood,lower=0,success=data$AIDS_yes[1],size=data$n[1])$par)
(theta_AZT_no.opt=nlminb(start=0.5,binomial.log.likelihood,lower=0,success=data$AIDS_yes[2],size=data$n[2])$par)
#Theta for patients treated without AZT. This is the probability of having AIDS without treament.
#(theta_AZT_no.opt=optimize(binomial.log.likelihood, c(0.01,0.99),x=data$AIDS_yes[2],size=data$n[2])$minimum)
k1 <- data$AIDS_yes[1] #ATZ_yes
k2 <- data$AIDS_yes[2] #ATZ_no
n1 <- data$n[1]
n2 <- data$n[2]
p1 <- k1/n1
p2 <- k2/n2
p <- k/n
library(numDeriv)
I <- hessian(binomial.log.likelihood,theta,success=k,size=n)
I_AZT_yes <- hessian(binomial.log.likelihood,theta_AZT_yes.opt,success=k1,size=n1)
I_AZT_no <- hessian(binomial.log.likelihood,theta_AZT_no.opt,success=k2,size=n2)
#The standard error
se <- 1/sqrt(I)
se_AZT_yes <- 1/sqrt(I_AZT_yes)
se_AZT_no <- 1/sqrt(I_AZT_no)
#confidence intervallet
(p+c(-1,1)*qnorm(0.975)*se/sqrt(n))
(p1+c(-1,1)*qnorm(0.975)*se_AZT_yes/sqrt(n1))
(p2+c(-1,1)*qnorm(0.975)*se_AZT_no/sqrt(n2))
x=data$AIDS_yes[1]
y=data$AIDS_no[1]
m=sum(data$AIDS_yes)
n=sum(data$AIDS_no)
N=m+n
t=x+y
#The standard test of equality of proportions is the famous chi-squared test
(chi.squared.test=N*(x*(n-y)-y*(m-x))^2/(m*n*t*(N-t)))
(pchisq(chi.squared.test, df=1, lower.tail=FALSE))
library(magrittr)
log_data = data
logL_partial <- function(b0, b1, data, AZT = TRUE){
y = if (AZT) {data[1,2]} else {data[2,2]} %>% as.numeric()
n = if (AZT) {data[1,3]} else {data[2,3]} %>% as.numeric()
false = n-y
y*((b0 + b1 * AZT) * 1 - log(1+exp(b0+b1*AZT))) + false*((b0 + b1 * AZT) * 0 - log(1+exp(b0+b1*AZT)))
}
logL <- function(theta, data){
- (logL_partial(theta[1], theta[2],data, F) + logL_partial(theta[1],theta[2],data, T))
}
opt <- nlminb(c(0, 0), logL, lower = c(-Inf,-Inf), data = log_data)
p0 <- exp(opt$par[1])/(1+exp(opt$par[1]))
p1 <- exp(opt$par[1] + opt$par[2])/(1+exp(opt$par[1] + opt$par[2]))
logL_b1 <- function(theta, b1, data){
-(logL_partial(theta[1], b1,data, F) + logL_partial(theta[1],b1,data, T))
}
profile_b1 <- function(b1, data){
opt <- nlminb(c(0), logL_b1, lower = c(-Inf), data = log_data, b1 = b1)
# optimize(logL)
b0 <- opt$par
-logL_b1(c(b0),b1,data)
}
b1 <- seq(-5,5,0.01)
alpha <- 0.05
c <- exp(-1/2*qchisq(1-alpha,1))
p = c()
for (i in 1:length(b1)){
p[i] = exp(profile_b1(b1[i], log_data))
}
MLE_b1 <- optimize(profile_b1, c(-5,5), data = log_data, maximum = T)$maximum
plot(b1, p/max(p), 'l')
abline(c, 0)
abline(v = MLE_b1)
a_b1 <- b1[p/max(p) > c]
CI_b1 <- c(min(a_b1), max(a_b1))
cat("The maximum likelihood estimates of p0 and p1 are: p0 = ", p0, " p1 = ", p1, "\n")
cat("The maximum profile likelihood estimate of b1 is:  ", MLE_b1, "\n")
cat("With confidence intervals: ", CI_b1, "\n")
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
#Count number of patient without treatment and without AIDS
(sum(data.time$tx == 0 & data.time$event == 0))
#Count number of patient without treatment and AIDS
(sum(data.time$tx == 0 & data.time$event == 1))
#Count number of patient with treatment and without AIDS
(sum(data.time$tx == 1 & data.time$event == 0))
# Count number of patient with treatment and AIDS
(sum(data.time$tx == 1 & data.time$event == 1))
#Calculating proportions
#No aids out of people without treatment
(sum(data.time$tx == 0 & data.time$event == 0))/sum(data.time$tx == 0)
#Aids out of people without treatment
(sum(data.time$tx == 0 & data.time$event == 1))/sum(data.time$tx == 0)
#No Aids out of people with treatment
(sum(data.time$tx == 1 & data.time$event == 0))/sum(data.time$tx == 1)
#Aids out of people with treatment
(sum(data.time$tx == 1 & data.time$event == 1))/sum(data.time$tx == 1)
exp.likelihood=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood,lower=0)$par)
#(nlminb(start=0.5,objective = exp.likelihood,lower=0)$objective)
#(optimize(exp.likelihood,c(0, 100),maximum=TRUE)$maximum)
exp.likelihood_no_treat=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1 & data.time$tx == 0], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0 & data.time$tx == 0], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood_no_treat,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood_no_treat,lower=0)$objective)
exp.likelihood_with_treat=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1 & data.time$tx == 1], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0 & data.time$tx == 1], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood_with_treat,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood_with_treat,lower=0)$objective )
# Implement negative log likelihood function
nll.exp <- function(rate){
val1 <- -sum(dexp(x=data.time$time[data.time$event==1],rate=rate[1]+rate[2]*data.time$tx[data.time$event==1],log=TRUE))
val2 <- -sum(pexp(q=data.time$time[data.time$event==0],rate=rate[1]+rate[2]*data.time$tx[data.time$event==0],lower.tail=F,log=TRUE))
val1+val2
}
opt.exp <- nlminb(start=c(0.001,0.005),objective=nll.exp,lower=c(-Inf,-Inf))
(opt.exp$par[2])
#Making a confidence interval
HE <- hessian(nll.exp,opt.exp$par)
se <- sqrt(diag(solve(HE)))
#Confidence interval for b1
(opt.exp$par[2]+c(-1,1)*qnorm(0.975)*se[2])
nll.b1 <- function(rate,b1){
val1 <- -sum(dexp(x=data.time$time[data.time$event==1],rate=rate[1]+b1*data.time$tx[data.time$event==1],log=TRUE))
val2 <- -sum(pexp(q=data.time$time[data.time$event==0],rate=rate[1]+b1*data.time$tx[data.time$event==0],lower.tail=F,log=TRUE))
val1+val2
}
profile.b1 <- function(b1){
opt <- nlminb(start=c(0.001),objective=nll.exp,lower=c(-Inf),b1=b1)
b0 <-opt$par
-nll.b1(c(b0),b1)
}
b1 <- seq(-0.0005,0.0005,0.00001)
n_b1 = length(b1)
p = rep(NaN,n_b1)
# for (i in 1:length(b1)) {
#    p[i] = exp(profile.b1(b1[i]))
#  }
#
# plot(b1,p/max(p),'l')
n_b1 = length(b1)
profile.b1.plot = rep(NaN,n_b1)
for (i in 1:length(b1)){
profile.b1.plot[i] = profile.b1(b1[i])
}
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
#Formulating the likelihood function
binomial.log.likelihood = function(theta,success,size){
-(sum(dbinom(x=success,size=size,prob=theta, log=TRUE)))}
(theta.opt=optimize(binomial.log.likelihood, c(0.01,0.99),success=sum(data$AIDS_yes),size=sum(data$n))$minimum)
(nlminb(start=0.5,objective=binomial.log.likelihood,lower=0,success=k,size=n)$par)
#Theta for patients treated with AZT. This is the probability of having AIDS when treated with AZT.
#(theta_AZT_yes.opt=optimize(binomial.log.likelihood, c(0.01,0.99),x=data$AIDS_yes[1],size=data$n[1])$minimum)
(theta_AZT_yes.opt=nlminb(start=0.5,binomial.log.likelihood,lower=0,success=data$AIDS_yes[1],size=data$n[1])$par)
(theta_AZT_no.opt=nlminb(start=0.5,binomial.log.likelihood,lower=0,success=data$AIDS_yes[2],size=data$n[2])$par)
#Theta for patients treated without AZT. This is the probability of having AIDS without treament.
#(theta_AZT_no.opt=optimize(binomial.log.likelihood, c(0.01,0.99),x=data$AIDS_yes[2],size=data$n[2])$minimum)
k1 <- data$AIDS_yes[1] #ATZ_yes
k2 <- data$AIDS_yes[2] #ATZ_no
n1 <- data$n[1]
n2 <- data$n[2]
p1 <- k1/n1
p2 <- k2/n2
library(numDeriv)
I <- hessian(binomial.log.likelihood,theta,success=k,size=n)
I_AZT_yes <- hessian(binomial.log.likelihood,theta_AZT_yes.opt,success=k1,size=n1)
I_AZT_no <- hessian(binomial.log.likelihood,theta_AZT_no.opt,success=k2,size=n2)
#The standard error
se <- 1/sqrt(I)
se_AZT_yes <- 1/sqrt(I_AZT_yes)
se_AZT_no <- 1/sqrt(I_AZT_no)
#confidence intervallet
(p+c(-1,1)*qnorm(0.975)*se/sqrt(n))
(p1+c(-1,1)*qnorm(0.975)*se_AZT_yes/sqrt(n1))
(p2+c(-1,1)*qnorm(0.975)*se_AZT_no/sqrt(n2))
x=data$AIDS_yes[1]
y=data$AIDS_no[1]
m=sum(data$AIDS_yes)
n=sum(data$AIDS_no)
N=m+n
t=x+y
#The standard test of equality of proportions is the famous chi-squared test
(chi.squared.test=N*(x*(n-y)-y*(m-x))^2/(m*n*t*(N-t)))
(pchisq(chi.squared.test, df=1, lower.tail=FALSE))
(theta.compare = log((theta_AZT_yes.opt/(1-theta_AZT_yes.opt))/(theta_AZT_no.opt/(1- theta_AZT_no.opt))))
(log((x/(m-x))/(y-(n-y))))
k1 <- data$AIDS_yes[1] #ATZ_yes
k2 <- data$AIDS_yes[2] #ATZ_no
n1 <- data$n[1]
n2 <- data$n[2]
#Negative log-likelihood function
logL <- function(theta){
b0 <- theta[1]
b1 <- theta[2]
k2*((b0 +b1*0)-log(1+exp(b0+b1*0)))+(n2-k2)*((b0+b1*0)-log(1+exp(b0+b1*0)))+k1*((b0 +b1*1)-log(1+exp(b0+b1*1)))+(n1-k1)*((b0+b1*0)-log(1+exp(b0+b1*1)))
}
opt <- nlminb(c(0,0),objective = logL,lower=c(-Inf,-Inf))
#fit.glm =glm(y~x, family=binomial)
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
#Count number of patient without treatment and without AIDS
(sum(data.time$tx == 0 & data.time$event == 0))
#Count number of patient without treatment and AIDS
(sum(data.time$tx == 0 & data.time$event == 1))
#Count number of patient with treatment and without AIDS
(sum(data.time$tx == 1 & data.time$event == 0))
# Count number of patient with treatment and AIDS
(sum(data.time$tx == 1 & data.time$event == 1))
#Calculating proportions
#No aids out of people without treatment
(sum(data.time$tx == 0 & data.time$event == 0))/sum(data.time$tx == 0)
(sum(data.time$tx == 0 & data.time$event == 1))/sum(data.time$tx == 0)
(sum(data.time$tx == 1 & data.time$event == 0))/sum(data.time$tx == 1)
(sum(data.time$tx == 1 & data.time$event == 1))/sum(data.time$tx == 1)
exp.likelihood=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood,lower=0)$objective)
#(optimize(exp.likelihood,c(0, 100),maximum=TRUE)$maximum)
exp.likelihood_no_treat=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1 & data.time$tx == 0], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0 & data.time$tx == 0], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood_no_treat,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood_no_treat,lower=0)$objective)
exp.likelihood_with_treat=function(rate){
-sum(dexp(x=data.time$time[data.time$event==1 & data.time$tx == 1], rate=rate, log=TRUE))- sum(pexp(q=data.time$time[data.time$event==0 & data.time$tx == 1], lower.tail = FALSE, rate=rate, log=TRUE))
}
(nlminb(start=0.5,objective = exp.likelihood_with_treat,lower=0)$par)
(nlminb(start=0.5,objective = exp.likelihood_with_treat,lower=0)$objective )
# Implement negative log likelihood function
nll.exp <- function(rate){
val1 <- -sum(dexp(x=data.time$time[data.time$event==1],rate=rate[1]+rate[2]*data.time$tx[data.time$event==1],log=TRUE))
val2 <- -sum(pexp(q=data.time$time[data.time$event==0],rate=rate[1]+rate[2]*data.time$tx[data.time$event==0],lower.tail=F,log=TRUE))
val1+val2
}
opt.exp <- nlminb(start=c(0.001,0.005),objective=nll.exp,lower=c(-Inf,-Inf))
(opt.exp$par[2])
#Making a confidence interval
I <- hessian(nll.exp,opt.exp$par)
se <- 1/sqrt(I)
(opt.exp$par+c(-1,1)*qnorm(0.975)*se/sqrt(n))
nll.b1 <- function(rate,b1){
val1 <- -sum(dexp(x=data.time$time[data.time$event==1],rate=rate[1]+b1*data.time$tx[data.time$event==1],log=TRUE))
val2 <- -sum(pexp(q=data.time$time[data.time$event==0],rate=rate[1]+b1*data.time$tx[data.time$event==0],lower.tail=F,log=TRUE))
val1+val2
}
profile.b1 <- function(b1){
opt <- nlminb(c(0),nll.b1,lower=(-Inf),b1=b1)
b0 <-opt$par[1]
-nll.b1(c(b0),b1)
}
b1 <- seq(-5,5,0.1)
p = c()
# for (i in 1:length(b1)) {
#   p[i] = exp(profile.b1(b1[i]))
# }
#plot(b1,p/max(p),'l')
plot(b1,profile.b1(b1))
