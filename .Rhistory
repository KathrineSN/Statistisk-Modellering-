#Time ratio for bearings
exp(cbind(coef(mod3)[3],confint(mod3)[3, 1], confint(mod3)[3, 2]))
#Time ratio for loads
exp(cbind(coef(mod3)[2],confint(mod3)[2, 1], confint(mod3)[2, 2])*50)
data <- read.delim("tuno.txt",header = TRUE, sep = " ", dec = ".")
data$pow.obs.norm<-(data$pow.obs)/5000
head(data,6)
mod1=lm(pow.obs.norm~ ws30+I(ws30^2), data=data)
summary(mod1)
AIC(mod1)
mod4=lm(pow.obs.norm~ ws30+wd30+I(ws30^2)+I(wd30^2), data=data)
summary(mod4)
AIC(mod4)
#This is the best model so far
mod2=glm(pow.obs.norm~ ws30,family=Gamma,  data=data)
summary(mod2)
AIC(mod2)
trans1 <- function(lambda,y){
y.l <- 1/lambda*log((y^lambda)/(1-y^lambda))
return(y.l)}
## profile likelihood for lambda
lp.lambda1 <- function(lambda,y){
n <- length(y)
y.l <- trans1(lambda ,y)
sigmasq <- 1/n * sum((y.l-mean(y.l))^2)
-n/2 * log(sigmasq) + sum(log(abs(-1/(y*(-1 + y^lambda)))))}
(opt.lambda.trans1=optimize(lp.lambda1,c(0.000001,70),y=data$pow.obs.norm, maximum=TRUE))
mod3=glm(trans1(opt.lambda.trans1$maximum,data$pow.obs.norm)~ ws30,family=gaussian,  data=data)
summary(mod3)
AIC(mod3)
mod3=glm(trans1(opt.lambda.trans1$maximum,data$pow.obs.norm)~ ws30,family = gaussian,  data=data)
summary(mod3)
AIC(mod3)
trans2 <- function(lambda,y){
y.l <- 2*log((y^lambda)/(1-y)^(1-lambda))
return(y.l)}
## profile likelihood for lambda
lp.lambda2 <- function(lambda,y){
n <- length(y)
y.l <- trans2(lambda ,y)
sigmasq <- 1/n * sum((y.l-mean(y.l))^2)
-n/2 * log(sigmasq) + sum(log(abs(((4*lambda - 2)*y - 2*lambda)/(y*(-1 + y)))))}
(opt.lambda.trans2=optimize(lp.lambda2,c(0.000001,1),y=data$pow.obs.norm, maximum=TRUE))
mod4=glm(trans2(opt.lambda.trans2$maximum,data$pow.obs.norm)~ ws30,family=gaussian,  data=data)
summary(mod4)
AIC(mod4)
## box-cox transformation
bc.trans <- function(lambda,y){
y.l <- (y^lambda-1)/lambda
if(lambda==0){y.l <- log(y)}
return(y.l)}
## profile likelihood for lambda
lp.lambda <- function(lambda,y){
n <- length(y)
y.l <- bc.trans(lambda ,y)
sigmasq <- 1/n * sum((y.l-mean(y.l))^2)
-n/2 * log(sigmasq) + (lambda-1)*sum(log(y))}
(opt.lambda.boxcox=optimize(lp.lambda,c(-2,2),y=data$pow.obs.norm,maximum=TRUE))
mod5=glm(bc.trans(opt.lambda.boxcox$maximum,data$pow.obs.norm)~ ws30,family=gaussian,  data=data)
summary(mod5)
AIC(mod5)
library(betareg)
mod6=betareg(pow.obs.norm ~ ws30, data=data)
summary(mod6)
AIC(mod6)
plot(mod6, which = 5)
library(betareg)
mod6=betareg(pow.obs.norm ~ ws30, data=data)
summary(mod6)
AIC(mod6)
qqnorm(mod6$residuals)
qqline(mod6$residuals)
#plot(mod6, which = 5)
#qqPlot(mod6, data = data)
data <- read.delim("tuno.txt",header = TRUE, sep = " ", dec = ".")
data$pow.obs.norm<-(data$pow.obs)/5000
head(data,6)
mod1=lm(pow.obs.norm~ ws30+I(ws30^2), data=data)
summary(mod1)
AIC(mod1)
qqnorm(mod1$residuals )
qqline(mod1$residuals)
mod2=glm(pow.obs.norm~ ws30,family=Gamma,  data=data)
summary(mod2)
AIC(mod2)
qqnorm(mod2$residuals)
qqline(mod2$residuals)
library(betareg)
mod8=betareg(pow.obs.norm~ ws30, data=data)
summary(mod8)
AIC(mod8)
qqnorm(mod8$residuals)
qqline(mod8$residuals)
trans1 <- function(lambda,y){
y.l <- 1/lambda*log((y^lambda)/(1-y^lambda))
return(y.l)}
## profile likelihood for lambda
lp.lambda1 <- function(lambda,y){
mod <- lm(trans1(lambda,y)~data$ws30+I(data$ws30^2))
length(y)/2*log(summary(mod)$sigma^2) - sum(log(abs(1/(y*(1 - y^lambda)))))
}
plot(seq(0.01,1,0.01), sapply(seq(0.01,1,0.01), lp.lambda1, y=data$pow.obs.norm))
lp.lambda1(1/1, data$pow.obs.norm)
(opt.lambda.trans1=optimize(lp.lambda1,c(0,1),y=data$pow.obs.norm))
mod3=glm(trans1(opt.lambda.trans1$minimum,data$pow.obs.norm)~ ws30+I(data$ws30^2),family=gaussian,  data=data)
summary(mod3)
AIC(mod3)
qqnorm(mod3$residuals)
qqline(mod3$residuals)
trans2 <- function(lambda,y){
y.l <- 2*log((y^lambda)/(1-y)^(1-lambda))
return(y.l)}
## profile likelihood for lambda
lp.lambda2 <- function(lambda,y){
n <- length(y)
y.l <- trans2(lambda ,y)
sigmasq <- 1/n * sum((y.l-mean(y.l))^2)
-n/2 * log(sigmasq) + sum(log(abs(((4*lambda - 2)*y - 2*lambda)/(y*(-1 + y)))))}
(opt.lambda.trans2=optimize(lp.lambda2,c(0.000001,1),y=data$pow.obs.norm, maximum=TRUE))
mod7=glm(trans2(opt.lambda.trans2$maximum,data$pow.obs.norm)~ ws30,family=gaussian,  data=data)
summary(mod7)
AIC(mod7)
qqnorm(mod7$residuals)
qqline(mod7$residuals)
## box-cox transformation
bc.trans <- function(lambda,y){
y.l <- (y^lambda-1)/lambda
if(lambda==0){y.l <- log(y)}
return(y.l)}
## profile likelihood for lambda
lp.lambda <- function(lambda,y){
n <- length(y)
y.l <- bc.trans(lambda ,y)
sigmasq <- 1/n * sum((y.l-mean(y.l))^2)
-n/2 * log(sigmasq) + (lambda-1)*sum(log(y))}
(opt.lambda.boxcox=optimize(lp.lambda,c(-2,2),y=data$pow.obs.norm,maximum=TRUE))
mod6=glm(bc.trans(opt.lambda.boxcox$maximum,data$pow.obs.norm)~ ws30,family=gaussian,  data=data)
summary(mod6)
AIC(mod6)
qqnorm(mod6$residuals)
qqline(mod6$residuals)
mod1=lm(pow.obs.norm~ ws30+I(ws30^2), data=data)
summary(mod1)
AIC(mod1)
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
### How many got AIDS in the two treament groups?
```{r}
by(data.time$event, data.time$tx, sum)
### Load data
```{r}
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
```
### Load data
```{r}
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
```
### Load data
```{r}
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
```
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
setwd("~/GitHub/Statistisk-Modellering-")
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
### Load data
```{r}
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
```
by(data.time$event, data.time$tx, sum)
by(data.time$YearTime, data.time$tx, sum)
by(data.time$YearTime, data.time$tx, sum)
```
The follow-up time is a little longer for patients with treatment.
Surv.Bytx <- survfit(Surv(time, event == 1) ~ tx,
conf.type = "log-log",data = data.time)
(Surv.Bytx)
```
### Load data
```{r}
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
```
by(data.time$event, data.time$tx, sum)
```
The follow-up time is a little longer for patients with treatment.
```{r}
#From days to years
data.time$YearTime <- data.time$time/365.25
by(data.time$YearTime, data.time$tx, sum)
```{r}
library(survival)
Surv.Bytx <- survfit(Surv(time, event == 1) ~ tx,
conf.type = "log-log",data = data.time)
(Surv.Bytx)
```
plot(Surv.Bytx, conf.int = T, las = 1, xlab = "Time",ylab = "Estimated Survival Prob.", col=c(2,3), lwd = 1)
legend("bottomleft", col=2:3, c("Not treated","Treated"), lwd=2)
```
The fu
```{r}
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
```
### How many got AIDS in the two treament groups?
```{r}
by(data.time$event, data.time$tx, sum)
```
### How long is the follow-up time?
```{r}
#From days to years
data.time$YearTime <- data.time$time/365.25
by(data.time$YearTime, data.time$tx, sum)
```
The follow-up time is a little longer for patients with treatment.
### Plot the survival function in the two treatment groups, which groups seems to be doing best?
```{r}
library(survival)
Surv.Bytx <- survfit(Surv(time, event == 1) ~ tx,
conf.type = "log-log",data = data.time)
(Surv.Bytx)
```
```{r}
plot(Surv.Bytx, conf.int = T, las = 1, xlab = "Time",ylab = "Estimated Survival Prob.", col=c(2,3), lwd = 1)
legend("bottomleft", col=2:3, c("Not treated","Treated"), lwd=2)
```
The functions differ towards the end. It is seen that the probability of surviving is higher when a patient is treated.
### Plot the cumulative incidence function for the two groups which do you prefer?
```{r}
plot(Surv.Bytx, fun=function(x) { 1- x }, conf.int = T,las = 1, xlab = "Time",
ylab = "Estimated Failure Prob.", col=c(2,3))
legend("topleft", col=c(2,3), c("Male","Female"))
```
The cumulative incidence function is best, since it is easier to see what is happening on this plot given than the incidence rate is fairly low.
### Compare the survival in the two treatment groups using the Log-rank test
```{r}
survdiff(Surv(YearTime, event == 1) ~ tx, data = data.time)
```
The p-value is significant. The null-hypothesis is rejected, meaning that it does make a difference to receive treatment.
## 1.2 Parametric survival models
## Fit parametric survival models containing treatment (tx) and CD4 count as exploratory variables
### Weibull model
```{r}
mod1 <- survreg(Surv(time, event) ~ tx + cd4,
data = data.time, dist = "weibull")
summary(mod1)
```
It looks like that sigma factor is significant for the model, therefore, an exponential regression model would not be a better fit.
### Log-logistic model
```{r}
mod3 <- survreg(Surv(time, event) ~ cd4 + tx,
data = data.time, dist = "loglogistic")
summary(mod3)
```
All parameters are significant.
### AIC
To compare the 2 models the AIC score is calculated
```{r}
c(AIC(mod1),AIC(mod3))
```
The loglogistic model is best because it has the lowest AIC score.
### Make a table of estimates for the parameters in the Loglogistic model including a 95% confidence interval
```{r}
confint(mod3)
```
### Time Ratio log-logistic for th treatment effect and the effect of CD¤ count witg 50
```{r}
#Time ratio for bearings
exp(cbind(coef(mod3)[3],confint(mod3)[3, 1], confint(mod3)[3, 2]))
#Time ratio for loads
exp(cbind(coef(mod3)[2],confint(mod3)[2, 1], confint(mod3)[2, 2])*50)
```
The survival time is increased with 132% when a patient is treated.
The survival time is increased 183% for every 50 cd4 cells/milliliter.
### Asses the goodness of fit of the loglogistic model using the Cox Snell residuals
```{r}
data.time$z <- (log(data.time$time)-mod3$linear.predictors)/mod3$scale
data.time$CS3 <- log(1+exp(data.time$z))
surv3 <- survfit(Surv(CS3, event==1)~1 , data = data.time)
plot(surv3$time, -log(surv3$surv))
abline(a=0, b=1, lty=2)
```
The fit looks okay. The models best in the early survival times. The longer time that passes, the worse it fits.
### Give a grafical representation of model
```{r}
xrange <- range(data.time$time)
t <- seq(xrange[1],xrange[2],length=100)
#LOG LOGISTIC
coef3 <- mod3$coefficients
z31 <- (log(t)-(coef3[1]+coef3[2]+coef3[3]))/mod3$scale
z30 <- (log(t)-(coef3[1]+coef3[2]))/mod3$scale
S31 <- (1+exp(z31))^-1
S30 <- (1+exp(z30))^-1
# get the range for the x and y axis
xrange <- range(data.time$time)
yrange <- range(S30)
# set up the plot
plot(xrange, yrange, type="n", xlab="Hours since test start",
ylab="Probability of survival (cd4=1)",las=1)
#PLOT THE SURVIVAL FUNCTIONS
lines(t, S31, type="l", col=2, lty=1, lwd=2)
lines(t, S30, type="l", col=3, lty=1, lwd=2)
legend('topright',lwd=2,col=c(2,3),legend=c('LL with tx', 'LL without tx'))
```
It is seen that patients in general have higher probability of surviving if they are treated.
#Time ratio for bearings
exp(cbind(coef(mod3)[3],confint(mod3)[3, 1], confint(mod3)[3, 2]))
#Time ratio for loads
exp(cbind(coef(mod3)[2],confint(mod3)[2, 1], confint(mod3)[2, 2])*50)
```
xrange <- range(data.time$time)
t <- seq(xrange[1],xrange[2],length=100)
#LOG LOGISTIC
coef3 <- mod3$coefficients
z31 <- (log(t)-(coef3[1]+coef3[2]+coef3[3]))/mod3$scale
z30 <- (log(t)-(coef3[1]+coef3[2]))/mod3$scale
S31 <- (1+exp(z31))^-1
S30 <- (1+exp(z30))^-1
# get the range for the x and y axis
xrange <- range(data.time$time)
yrange <- range(S30)
# set up the plot
plot(xrange, yrange, type="n", xlab="Hours since test start",
ylab="Probability of survival (cd4=1)",las=1)
#PLOT THE SURVIVAL FUNCTIONS
lines(t, S31, type="l", col=2, lty=1, lwd=2)
lines(t, S30, type="l", col=3, lty=1, lwd=2)
legend('topright',lwd=2,col=c(2,3),legend=c('LL with tx', 'LL without tx'))
data.time$z <- (log(data.time$time)-mod3$linear.predictors)/mod3$scale
data.time$CS3 <- log(1+exp(data.time$z))
surv3 <- survfit(Surv(CS3, event==1)~1 , data = data.time)
plot(surv3$time, -log(surv3$surv))
abline(a=0, b=1, lty=2)
```
